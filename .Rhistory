a
a <-- available.packages()
a <- available.packages()
available.packages()
head(rownames(a), 6)
head(rownames(a),3)
a <- available.packages()
head(rownames(a), 6)
find.package("devtools")
find.packages("devtools")
install.packages("devtools")
library(devtools)
find.package("devtools")
library(devtools)
find_rtools()
a
available.packages()
a <- available.packages()
head(rownames(a), 10)
install.packages("KernSmooth")
library(KernSmooth)
x <- 1
x
print(x)
msg <- "hello"
msg
x <- 1 ### test
x
x  <- 5
x
print(x)
x <- 1:20
x
x
print(x)
clear()
vector()
x <- vector()
x
x <- 1:20L
x
attributes(x)
x <- c(0.5, 0.6)
x
x <- c(T, F)
x
x <- c("a", "b", "c")
x
x <- 1:19
x
attributes(x)
x <- 1:20L
attributes(X)
attributes(x)
x <- c(1+0i, 2+4i)
attributes(x)
x <- vector("numeric", length=10)
x
x <- vector("logical", length=5)
x
x <- c(1.7, "a")
x
x <- c(T, 2)
x
x <- c("a", F)
x
x <- 0:6
class(x)
as.numeric(x)
class(x)
as.logical(x)
as.character(x)
class(x)
as.character(x)
as.complex(x)
x <- c("a', "b", "c")
x <- c("a", "b", "c")
x
as.numeric(x)
as.logical(x)
as.complex(x)
x <- list(1, "a", T, 1 +4i)
x
x <- matrix(nrow=2, ncol=3)
x
dim(x)
attributes(x)
x <- matrix(1:20, nrow=3, ncol=5)
x <- matrix (1:20, nrow=4, ncol=5)
x
x <- 1:10
x
dim(x) <- c(2,3)
dim(x) <- c(2, 5)
x
x <- 1;3
y <- 10:12
y <- 3;2
x <- 1:3
y <- 10:12
cbind(x, y)
z <- 10:14
cbind(x, z)
length(x)
length(z)
rbind(x, y)
rbind(x, z)
x <- factor(c("M", "m", "f", "F", "M"))
x
table(x)
unclass(x)
x <- factor(c("M", "F", "M", "f"))
x
levels = c("M", "F", "f")
x
x <- factor(c("M", "f", "m"), levels("M", "m", "f"))
x <- factor(c("M", "f", "m"), levels = c("M", "m", "f"))
x
is.na()
x <- c(1,2,NA,10,3)
x
is.na(x)
x <- c(1,2,,10,3)
x <- c(1,2,NA,10,3)
is.nan(x)
x <- (1,2,3,NA,NAN,4)
x <- c(1,2,3,NA,NAN,4)
x <- c(1,2,3,NA,NaN,4)
x
is.nan(x)
is.na(x)
x <-data.frame(entries=1:10, logic = c(T,T,F,F))
x <-data.frame(entries=1:4, logic = c(T,T,F,F))
x
nrows(x)
nrow(x)
ncol(x)
rowname(x)
rownames(x)
x <-1:3
x
names(x) <- c("F", "S", "T","f")
length(x)
names(x) <- c("F", "S", "T")
x
rownames(x)
names(x)
x <- list(a=1, b=2,c=4)
names(x)
x
m <- (1:4, nrow=2, ncol=2)
m <- matrix(1:4, nrow=2, ncol=2)
m
dimnames(m) <- list(c("R","D"), c("N","S"))
m
6 != 10 && FALSE && 1 >= 2` or `TRUE || 5
| < 9.3 || FALSE
6 != 10 && FALSE && 1 >= 2 or TRUE || 5
| < 9.3 || FALSE
6 != 10 && FALSE && 1 >= 2 or TRUE || 5 < 9.3 || FALSE
6 != 10 && FALSE && 1 >= 2 or TRUE || 5 < 9.3 || FALSE
isTrue(6 > 4)
0
swirl()
library("swirl")
swirl()
?read.table
swirl()
Sys.date()
sys.date()
skip
Sys.Date()
mean(c(2, 4, 5))
boring_function <- function(x) {
x
}
skip
exit("swirl")
> boring_function <- function(x) {
x
}
source('~/.active-rstudio-document')
library("swirl", lib.loc="~/R/win-library/3.1")
0
exit
detach(package.swirl)
detach(package:swirl)
swirl()
x <- 4
class(x)
x <- 1:4; y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] < 6
x[x %in% 1:5] < 0
x[x %in% 1:5] <- 0
x
getwd()
?data.frame
?tail
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints > 7)
any(ints < 0)
all(ints > 0)
getwd()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
submiot()
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
skip()
skip
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]})
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(c)]}, c(8, 4, 0))
info()
evaluate(function(x){x[length(c)]}, c(8, 4, 0))
skip()
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("How are", "you")
telegram("How are", "you?")
submit()
submit()
submit()
mad_libs("Chicago", "awesome", them)
mad_libs("Chicago", "awesome", "them")
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
source('~/SAP/Training/John Hopkins Data Science Specialization/R Files/pollutantmean.R')
source('~/SAP/Training/John Hopkins Data Science Specialization/R Files/complete.R')
source('~/SAP/Training/John Hopkins Data Science Specialization/R Files/corr.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/SAP/Training/John Hopkins Data Science Specialization/R Files/corr.R')
load("~/SAP/Training/John Hopkins Data Science Specialization/R Files/pollutantmean.R")
source('~/.active-rstudio-document', echo=TRUE)
z <- 10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
head(mtcars)
?mtcars
?iris
library(datasets)
data(iris)
head(iris)
iris$Species
iris[iris$Species = virginica, 'Sepal.Length']
iris[iris$Species = 'virginica', 'Sepal.Length']
iris[iris$Species == 'virginica', 'Sepal.Length']
length(iris[iris$Species == 'virginica', 'Sepal.Length'])
mean(iris[iris$Species == 'virginica', 'Sepal.Length'])
apply(iris$Sepal.length, iris$Species, mean)
by(iris$Sepal.Length, list(Species = iris$Species, mean))
by(iris$Sepal.Length, list(Species=iris$Species), mean)
colMeans(iris)
apply(iris[,1;4],2, mean)
apply(iris[,1:4],2, mean)
t <- apply(iris[,1:4],2, mean)
class(t)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
head(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
length(mtcars)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
t <- split(mtcars, mtcars$cyl)
class9t
class(t)
t1 <- t[1]
t1
class(t1)
t1 <- t[[1]]
t1
class(t1)
mean(t1$mpg)
t1 <- t[[2]]
mean(t1$mpg)
t1 <- t[[3]]
mean(t1$mpg)
head(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
t1 <- with(mtcars, tapply(hp, cyl, mean))
t1
class(t1)
t1[1] - t[3]
t1[[1]] - t[[3]]
t1[[1]] - t1[[3]]
t1
t1$4 - t1$8
t1[,$4] - t1[,$8]
t1[,t1$4] - t1[,t1$8]
with(mtcars, tapply(hp, cyl, mean))
aggregate(hp~cyl, mtcars, mean)
t1 <- with(mtcars, tapply(hp, cyl, mean))
class9t1
class(t1)
t2 <- aggregate(hp~cyl, mtcars, mean)
class(t2)
t2
t1
abs(t1[1,'cyl'] - t1[3, 'cyl'])
abs(t1[[1,'cyl']] - t1[[3, 'cyl']])
t1[1,1]
t1[1,]
t1[[1]]
t1
abs[t1[[1]] - t1[[3]]]
t3 <- t1[[1]] - t1[[3]]
t3
abs(t3)
round(abs(t3), digits = 4)
debug(ls)
ls()
undebug(ls)
undebud(ls)
undebug(ls)
undebug(ls)
debugonce(ls)
ls()
source('~/.active-rstudio-document', echo=TRUE)
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
inv
source('C:/Users/dukandarr/ExData_Plotting1/plot3.R')
plot3()
library(Hmisc)
plot3()
dev.cur()
png(file = "plot3.png")
dev.cur()
plot(strptime(df$Date, "%d/%m/%Y %T"), as.numeric(df$Sub_metering_1),
type = "l", xlab = " ", ylab = "Energy sub metering", col = "black")
lines(strptime(df$Date, "%d/%m/%Y %T"), as.numeric(df$Sub_metering_2),
type = "l", xlab = " ", ylab = "Energy sub metering", col = "red")
lines(strptime(df$Date, "%d/%m/%Y %T"), as.numeric(df$Sub_metering_3),
type = "l", xlab = " ", ylab = "Energy sub metering", col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
col = c("black", "red", "blue"), lty=c(1,1))
dev.cur()
plot(strptime(df$Date, "%d/%m/%Y %T"), as.numeric(df$Sub_metering_1),
type = "l", xlab = " ", ylab = "Energy sub metering", col = "black")
plot(strptime(df$Date, "%d/%m/%Y %T"), as.numeric(df$Sub_metering_1),
type = "l", xlab = " ", ylab = "Energy sub metering", col = "black")
getwd()
df <- read.csv("household_power_consumption_sum.txt", header=TRUE, sep = ";")
head(df)
setwd("C:/Users/dukandarr/ExData_Plotting1")
library(Hmisc)
plot4()
source('C:/Users/dukandarr/ExData_Plotting1/plot4.R')
plot4()
source('C:/Users/dukandarr/ExData_Plotting1/plot1.R')
plot1()
